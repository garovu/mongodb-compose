name: mongodb-replicaset
services:
  mongodb-primary:
    image: mongo:8.0.4
    container_name: mongodb-primary
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb-primary-data:/data/db
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  mongodb-secondary-1:
    image: mongo:8.0.4
    container_name: mongodb-secondary-1
    restart: always
    volumes:
      - mongodb-secondary-1-data:/data/db
    command: --replSet rs0

  mongodb-secondary-2:
    image: mongo:8.0.4
    container_name: mongodb-secondary-2
    restart: always
    volumes:
      - mongodb-secondary-2-data:/data/db
    command: --replSet rs0

volumes:
  mongodb-primary-data:
  mongodb-secondary-1-data:
  mongodb-secondary-2-data: